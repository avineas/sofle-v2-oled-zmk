/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

&inc_dec_kp {
    bindings = <&encoder_increment>, <&encoder_decrement>;
};

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        fn_layer_sticky {
            bindings = <&sl 1>;
            key-positions = <0 50>;
            layers = <0>;
        };

        bluetooth_layer_toggle {
            bindings = <&sl 2>;
            key-positions = <2 50>;
            layers = <0 1 2>;
        };

        dictation {
            bindings = <&kp F14>;
            key-positions = <50 40>;
            layers = <0>;
        };
    };

    macros {
        hyper: hyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LGUI &sk LSHFT &sk LALT &sk LCTRL>;
            label = "HYPER";
        };

        caps_lock_bl: caps_lock_bl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <>;
            label = "CAPS_LOCK_BL";
        };
    };

    behaviors {
        braces: braces {
            compatible = "zmk,behavior-mod-morph";
            label = "BRACES";
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
        };

        encoder_increment: encoder_increment {
            compatible = "zmk,behavior-mod-morph";
            label = "ENCODER_INCREMENT";
            bindings = <&kp C_BRIGHTNESS_INC>, <&kp C_VOLUME_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        encoder_decrement: encoder_decrement {
            compatible = "zmk,behavior-mod-morph";
            label = "ENCODER_DECREMENT";
            bindings = <&kp C_BRIGHTNESS_DEC>, <&kp C_VOLUME_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        encoder_backlight: encoder_backlight {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ENCODER_BACKLIGHT";
            #sensor-binding-cells = <2>;
            bindings = <&bl>, <&bl>;
        };

        left_shift_caps: left_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_SHIFT_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <650>;
            bindings = <&sk LEFT_SHIFT>, <&kt CAPSLOCK>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC           &kp NUMBER_1  &kp N2   &kp N3     &kp N4    &kp N5                             &kp N6         &kp N7           &kp N8          &kp N9           &kp N0     &kp SQT
&kp TAB           &kp Q         &kp W    &kp E      &kp R     &kp T                              &kp Z          &kp U            &kp I           &kp O            &kp P      &kp KP_PLUS
&hyper            &kp A         &kp S    &kp D      &kp F     &kp G                              &kp H          &kp J            &kp K           &kp L            &braces    &kp UP_ARROW
&left_shift_caps  &kp Y         &kp X    &kp C      &kp V     &kp B     &kp C_MUTE    &none      &kp N          &kp M            &kp COMMA       &kp DOT          &kp MINUS  &kp DOWN_ARROW
                                &kp F13  &sk LCTRL  &sk LALT  &sk LGUI  &kp SPACE     &kp ENTER  &kp BACKSPACE  &sk RIGHT_SHIFT  &kp LEFT_ARROW  &kp RIGHT_ARROW
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        fn_layer {
            label = "fn";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&to 0      &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &trans     &trans       &trans    &trans     &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        kb_settings_layer {
            // ----------------------------------------------------------------------------------------------------------------------------
            // | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  |      |      |       |      |       |       |
            // | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
            // |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
            // |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
            //                    |         |         |         |         |         | |      |      |      |       |      |

            label = "kb_settings";
            bindings = <
&to 0         &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                          &none       &none  &none  &none  &none  &none
&out OUT_TOG  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF                       &none       &none  &none  &none  &none  &none
&none         &gresc           &none            &none            &none            &none                                 &none       &none  &none  &none  &none  &none
&none         &none            &none            &none            &none            &none            &bl BL_TOG    &none  &none       &none  &none  &none  &none  &none
                               &none            &none            &none            &none            &bt BT_CLR    &none  &bt BT_CLR  &none  &none  &none
            >;

            sensor-bindings = <&encoder_backlight BL_INC BL_DEC>;
        };
    };
};
